{{- if .Values.deployment.enabled -}}
  {{- if gt (int .Values.deployment.replicas) 1 -}}
    {{- with .Values.additionalArguments -}}
      {{- range . -}}
        {{- if contains ".acme." . -}}
          {{- fail (printf "You can not enabled acme if you set more than one traefik replica") -}}
        {{- end -}}
      {{- end -}}
    {{- end -}}
  {{- end -}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "traefik.fullname" . }}
  labels:
    app: {{ template "traefik.name" . }}
    chart: {{ template "traefik.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
  {{- if .Values.deployment.annotations }}
  annotations:
  {{- range $key, $value := .Values.deployment.annotations }}
    {{ $key | quote }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ default 1 .Values.deployment.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "traefik.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      {{- with .Values.rollingUpdate }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      {{- if .Values.deployment.podAnnotations }}
      annotations:
      {{- range $key, $value := .Values.deployment.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      labels:
        app: {{ template "traefik.name" . }}
        chart: {{ template "traefik.chart" . }}
        release: {{ .Release.Name | quote }}
        heritage: {{ .Release.Service | quote }}
    spec:
      serviceAccountName: {{ template "traefik.fullname" . }}
      terminationGracePeriodSeconds: 60
      hostNetwork: {{ .Values.hostNetwork }}
      containers:
      - image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        name: {{ template "traefik.fullname" . }}
        resources:
          {{- with .Values.resources }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        readinessProbe:
          httpGet:
            path: /ping
            port: {{ .Values.ports.traefik.port }}
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: {{ .Values.ports.traefik.port }}
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        {{- range $name, $config := .Values.ports }}
        - name: {{ $name | quote }}
          containerPort: {{ $config.port }}
          {{- if $config.hostPort }}
          hostPort: {{ $config.hostPort }}
          {{- end }}
          protocol: TCP
        {{- end }}
        volumeMounts:
          - name: data
            mountPath: {{ .Values.persistence.path }}
          {{- range .Values.volumes }}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
            readOnly: true
          {{- end }}
        args:
          {{- with .Values.globalArguments }}
          {{- range . }}
          - {{ . | quote }}
          {{- end }}
          {{- end }}
          {{- range $name, $config := .Values.ports }}
          - "--entryPoints.{{$name}}.address=:{{ $config.port }}"
          {{- end }}
          - "--api.dashboard=true"
          - "--ping=true"
          - "--providers.kubernetescrd"
          {{- with .Values.additionalArguments }}
          {{- range . }}
          - {{ . | quote }}
          {{- end }}
          {{- end }}
        {{- with .Values.env }}
        env:
          {{- toYaml . | nindent 10 }}
        {{- end }}
          {{- range .Values.secretEnv }}
          - name: {{ .name }}
            valueFrom:
              secretKeyRef:
                name: {{ .secretName }}
                key: {{ .secretKey }}
          {{- end }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "traefik.fullname" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- range .Values.volumes }}
        - name: {{ .name }}
          {{- if eq .type "secret" }}
          secret:
            secretName: {{ .name }}
          {{- else if eq .type "configMap" }}
          configMap:
            name: {{ .name }}
          {{- end }}
        {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- end -}}
